==== Transaction order dependence ====
Type: Warning
Contract: Benchmark
Function name: fallback
PC address: 316
A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location
--------------------
In file: /home/vagrant/host/benchmarks/./eth_tx_order_dependence_puzzle.sol:21

owner.transfer(reward)

--------------------

==== Transaction order dependence ====
Type: Warning
Contract: Benchmark
Function name: fallback
PC address: 551
A possible transaction order independence vulnerability exists in function fallback. The value or direction of the call statement is determined from a tainted storage location
--------------------
In file: /home/vagrant/host/benchmarks/./eth_tx_order_dependence_puzzle.sol:27

msg.sender.transfer(reward)

--------------------

==== Ether send ====
Type: Warning
Contract: Benchmark
Function name: fallback
PC address: 551
In the function `fallback` a non-zero amount of Ether is sent to msg.sender.

There is a check on storage index 0. This storage slot can be written to by calling the function `Puzzle()`.
There is a check on storage index 0. This storage slot can be written to by calling the function `Puzzle()`.
There is a check on storage index 2. This storage slot can be written to by calling the function `Puzzle()`.
--------------------
In file: /home/vagrant/host/benchmarks/./eth_tx_order_dependence_puzzle.sol:27

msg.sender.transfer(reward)

--------------------

==== Integer Overflow  ====
Type: Warning
Contract: Benchmark
Function name: fallback
PC address: 1416
A possible integer overflow exists in the function `fallback`.
The addition or multiplication may result in a value higher than the maximum representable integer.
--------------------
In file: /home/vagrant/host/benchmarks/./eth_tx_order_dependence_puzzle.sol:4

contract Benchmark {
    address public owner ;
    bool public locked ;
    uint public reward ;
    bytes32 public diff ;
    bytes public solution;

    function Puzzle() public payable {
        owner = msg.sender;
        reward = msg.value;
        locked = false ;
        diff = bytes32 (11111); // pre - defined difficulty
    }

    function () public payable { // main code , runs at every invocation
        if ( msg.sender == owner ){ // update reward
            require (!locked);
            owner.transfer(reward);
            reward = msg.value;
        } else {
            if (msg.data.length > 0) { // submit a solution
                require (!locked);
                if ( sha256 (msg.data ) < diff ){
                    msg.sender.transfer(reward); // send reward
                    solution = msg.data;
                    locked = true;
                }
            }
        }
    }
}

--------------------

==== Ether send ====
Type: Warning
Contract: Benchmark
Function name: fallback
PC address: 316
In the function `fallback` a non-zero amount of Ether is sent to an address taken from storage slot 0.
There is a check on storage index 0. This storage slot can be written to by calling the function `Puzzle()`.

There is a check on storage index 0. This storage slot can be written to by calling the function `Puzzle()`.
There is a check on storage index 0. This storage slot can be written to by calling the function `Puzzle()`.
--------------------
In file: /home/vagrant/host/benchmarks/./eth_tx_order_dependence_puzzle.sol:21

owner.transfer(reward)

--------------------


